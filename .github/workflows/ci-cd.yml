name: CI-CD
on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  GIT_USERNAME: rotorsoft
  GIT_USEREMAIL: rotorsoft@outlook.com
  GIT_HOST: github.com
  GIT_REPO: rotorsoft/eventually-monorepo

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.3-alpine
        env:
          POSTGRES_PASSWORD: postgres
        # health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: build service
        run: yarn install && yarn build

      - name: unit test
        run: yarn test --coverage
        env:
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: postgres
          PG_DATABASE: postgres

      - name: coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  git-config:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: create .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> .npmrc

      - name: config git
        run: |
          git config user.name $GIT_USERNAME
          git config user.email $GIT_USEREMAIL
          git remote set-url origin "https://${GIT_USERNAME}:${GITHUB_TOKEN}@${GIT_HOST}/${GIT_REPO}"

  cd:
    runs-on: ubuntu-latest
    needs: git-config
    strategy:
      matrix:
        lib:
          - eventually
          - eventually-pg
          - eventually-express
          - eventually-broker

    steps:
      - name: semrel analyze ${{ matrix.lib }}
        env:
          PACKAGE: "@rotorsoft/${{ matrix.lib }}"
          DIRECTORY: "libs/${{ matrix.lib }}"
        run: |
          read -r lastTag nextTag nextVersion releaseNotes <<< $(npx zx ./scripts/semrel/analyze.mjs | tail -n -1 | jq '.lastTag,.nextTag,.nextVersion,.releaseNotes' | cut -d "\"" -f 2)
          echo "LAST_TAG=${lastTag}" >> $GITHUB_ENV
          echo "NEXT_TAG=${nextTag}" >> $GITHUB_ENV
          echo "NEXT_VERSION=${nextVersion}" >> $GITHUB_ENV
          echo "RELEASE_NOTES=${releaseNotes}" >> $GITHUB_ENV

      - name: semrel release ${{ matrix.lib }}
        shell: sh
        if: ${{ env.NEXT_TAG != 'null' }}
        run: |
          ./scripts/semrel/log-commit-tag.sh
          ./scripts/semrel/github-release.sh
          ./scripts/semrel/npm-publish.sh
        env:
          npm_config_yes: true
