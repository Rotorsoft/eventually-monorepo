name: CI-CD
on:
  push:
    branches: [master]
  workflow_dispatch:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  GIT_USERNAME: rotorsoft
  GIT_USEREMAIL: rotorsoft@outlook.com
  GIT_HOST: github.com
  GIT_REPO: rotorsoft/eventually-monorepo

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12.3-alpine
        env:
          POSTGRES_PASSWORD: postgres
        # health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v3

      - name: install node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: build service
        run: yarn install && yarn build

      - name: unit test
        run: yarn test --coverage
        env:
          PG_HOST: localhost
          PG_USER: postgres
          PG_PASSWORD: postgres
          PG_DATABASE: postgres

      - name: coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  cd:
    runs-on: ubuntu-latest
    needs: ci
    strategy:
      matrix:
        lib:
          - eventually
          - eventually-pg
          - eventually-express
          - eventually-broker

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: install node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      - name: install
        run: yarn install

      - name: create .npmrc
        run: |
          echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${GITHUB_TOKEN}" >> .npmrc

      - name: config git
        run: |
          git config user.name $GIT_USERNAME
          git config user.email $GIT_USEREMAIL
          git remote set-url origin "https://${GIT_USERNAME}:${GITHUB_TOKEN}@${GIT_HOST}/${GIT_REPO}"

      - name: semrel analyze ${{ matrix.lib }}
        id: analyze
        env:
          PACKAGE: "@rotorsoft/${{ matrix.lib }}"
          DIRECTORY: "libs/${{ matrix.lib }}"
        run: |
          npx zx ./scripts/semrel/analyze.mjs | tail -4 | (
            read -r lastTag;
            read -r nextTag;
            read -r nextVersion;
            read -r releaseNotes;
            echo "::set-output name=lastTag::${lastTag}";
            echo "::set-output name=nextTag::${nextTag}";
            echo "::set-output name=nextVersion::${nextVersion}";
            echo "::set-output name=releaseNotes::${releaseNotes}";
          )

      - name: semrel release ${{ matrix.lib }}
        env:
          npm_config_yes: true
          PACKAGE: "@rotorsoft/${{ matrix.lib }}"
          DIRECTORY: "libs/${{ matrix.lib }}"
          LAST_TAG: ${{ steps.analyze.outputs.lastTag }}
          NEXT_TAG: ${{ steps.analyze.outputs.nextTag }}
          NEXT_VERSION: ${{ steps.analyze.outputs.nextVersion }}
          RELEASE_NOTES: ${{ steps.analyze.outputs.releaseNotes }}
        run: |
          if [[ ! $NEXT_TAG == "-" ]]; then
            msg="chore(release): ${NEXT_TAG} [skip ci]"
            
            echo "changelog..."
            echo "${RELEASE_NOTES}\n $(cat ./CHANGELOG.md)" > ./CHANGELOG.md
            echo "bumping..."
            npm --prefix ${DIRECTORY} --no-git-tag-version version ${NEXT_VERSION}
            echo "committing..."
            git add -A .
            HUSKY=0 git commit -m ${msg}
            echo "tagging..."
            git tag -a ${NEXT_TAG} HEAD -m ${msg}
            echo "pushing..."
            HUSKY=0 git push --follow-tags origin HEAD:refs/heads/master

            data=$(jq -n \
              --arg tag "$NEXT_TAG" \
              --arg notes "$RELEASE_NOTES" \
              '{name: $tag, tag_name: $tag, body: $notes}')
            echo "releasing..."
            curl -u ${GIT_USERNAME}:${GITHUB_TOKEN} -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${GIT_REPO}/releases -d ${data}

            echo "publishing..."
            npm config set registry https://registry.npmjs.org
            yarn ${DIRECTORY} npm publish --access public
            echo "ðŸš€ ${NEXT_TAG} released succesfully!"
          else
            echo "No semantic changes found!"
          fi
