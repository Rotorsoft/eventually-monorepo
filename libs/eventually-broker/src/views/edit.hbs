<div class="row mb-2">
  <div class="col-6">{{>breadcrumb title='Edit'}}</div>
  <div class="col-6 d-flex justify-content-end">
    <div class="col-6 mx-2">
      <input
        id="deleteId"
        type="text"
        class="form-control"
        id="floatingId"
        placeholder="{{this.id}}"
        name="deleteId"
        required
      />
    </div>
    <a id="deleteButton" href="#" type="button" class="btn btn-danger align-self-center disabled">
      <i class="bi bi-trash"></i> Delete</i>
    </a>
  </div>
</div>

<div id="stats" class="row m-5">
</div>

{{> alert}}

<form class="row my-5" method="post" action="/edit">
  {{> sub-form edit=true}}
</form>

<script>
  const delId = document.getElementById("deleteId");
  const delBtn = document.getElementById("deleteButton");
  delId.onkeyup = (ev) => {
    const enable = delId.value === '{{this.id}}';
    enable 
      ? delBtn.classList.remove("disabled")
      : delBtn.classList.add("disabled")
  }
  delBtn.onclick = () => {
    fetch("/delete/{{this.id}}", { method: "post" })
      .then(response => response.json())
      .then(json => {
        if(json.deleted) document.location = "/";
        else delId.value = "";
      })
      .catch(()=> delId.value = "")
  }

  const statsDiv = document.getElementById("stats");
  const refresh = (state) => {
    const color = state.status ? "danger" : "success";
    const icon = state.status ? "bi-cone-striped" : "bi-check";
    const events = state.events.map(({ name, ok, errors, ignored }) => {
      const okSpan = ok ? `<span class="badge bg-success">${ok}</span>` : "";
      const errorsSpan = errors ? `<span class="badge bg-danger">${errors}</span>` : "";
      const ignoredSpan = ignored ? `<span class="badge bg-secondary">${ignored}</span>` : ""; 
      return `
        <button type="button" class="btn btn-sm position-relative">
          ${name} 
          ${okSpan}
          ${errorsSpan}
          ${ignoredSpan}
        </button>
      `;
    }).join('');

    statsDiv.innerHTML=
    `<div class="card border-${color} mb-3">
      <div class="card-header bg-white text-${color}">
        <h5 class="card-title">
          Status: <i class="bi ${icon}"></i> ${state.status}
        </h5>
        <small class="card-subtitle text-muted">
          ${state.error}
        </small>
      </div>
      <div class="card-body">
        ${events}
      </div>
      <div class="card-footer bg-white">
        Position: ${state.position}/<b>${state.maxTriggerPosition}</b>
      </div>
    </div>`
  }

  const es = new EventSource(`/monitor/{{this.id}}`);
  es.onmessage = ({ data }) => {
    const props = JSON.parse(data);
    refresh(props);
  };
  es.onerror = (error) => {
    console.error(error);
  };

  refresh({{{json this}}});
</script>