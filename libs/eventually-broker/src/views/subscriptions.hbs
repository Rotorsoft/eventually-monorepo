<div class="row">
  <div class="col-6">
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item active">{{rows.length}} Subscriptions</li>
      </ol>
    </nav>
  </div>
  <div class="col-6 d-flex justify-content-end">
    {{#if isAdmin}}
    <a href="/_add" type="button" class="btn btn-primary align-self-center"><i
        class="bi bi-plus"
      ></i>
      Add</a>
    {{/if}}
  </div>
</div>

<table class="table align-middle sorted-table">
  <thead>
    <tr>
      <th scope="col"><a href="javascript:sort(0)">Id</a></th>
      <th scope="col" class="text-end"><a href="javascript:sort(1, true)">Position</a></th>
      <th scope="col" class="text-end"><a href="javascript:sort(2, true)">Session</a></th>
      <th scope="col"><a href="javascript:sort(3)">Producer</a></th>
      <th scope="col"><a href="javascript:sort(4)">Consumer</a></th>
      <th scope="col"><a href="javascript:sort(5)">Path</a></th>
      <th scope="col"><a href="javascript:sort(6)">Streams</a></th>
      <th scope="col" class="text-end"><a href="javascript:sort(7)">Updated</a></th>
    </tr>
  </thead>
  <tbody>
    {{#each rows}}
      <tr id="row-{{this.id}}" class="{{#unless this.active}}table-secondary{{/unless}}">
        <td id="status-{{this.id}}" scope="row"></td>
        <td class="text-end" id="position-{{this.id}}"></td>
        <td class="text-end" id="session-{{this.id}}"></td>
        <td>
          <a href="/_services/{{this.producer}}">{{this.producer}}</a>
          {{#if this.pll}}
            <a href="{{this.pll}}" target="_blank" rel="noopener noreferrer"><img src="/_public/assets/external-link.svg"
            alt="Logs"
            width="12"
            height="12" /></a>
          {{/if}}
        </td>
        <td>
          <a href="/_services/{{this.consumer}}">{{this.consumer}}</a>
          {{#if this.cll}}
            <a href="{{this.cll}}" target="_blank" rel="noopener noreferrer"><img src="/_public/assets/external-link.svg"
            alt="Logs"
            width="12"
            height="12" /></a>
          {{/if}}
        </td>
        <td>{{this.path}}</td>
        <td>{{this.streams}}</td>
        <td class="text-end">{{dateFormat this.updated}}</td>
      </tr>
    {{/each}}
  </tbody>
</table>

<script>
  const usnf = new Intl.NumberFormat("en-US");

  const badge = (count, cls) => 
    count > 0 ? `<span class="${cls}">${usnf.format(count)}</span>` : "";

  const refresh = (state) => {
    const { id, active, position, channelPosition, endpointStatus, total, events } = state;

    const rowTr = document.getElementById(`row-${id}`)
    rowTr && (active ? rowTr.classList.remove("table-secondary") : rowTr.classList.add("table-secondary"));

    const statusTd = document.getElementById(`status-${id}`);
    statusTd && (statusTd.innerHTML=`<i class="bi ${endpointStatus.icon} text-${endpointStatus.color}"></i>&nbsp;<a href="/${id}">${id}</a>`);
          
    const positionSpan = position < channelPosition 
          ? `${usnf.format(position)} /${usnf.format(channelPosition)}` 
          : usnf.format(position);
    const positionTd = document.getElementById(`position-${id}`);
    positionTd && (positionTd.innerHTML=`
      <div class="text-${endpointStatus.color}">
        ${positionSpan}
      </div>`
    );

    const a = events.reduce((a,e) => {
      a.ok += e.ok ? e.ok.count : 0;
      a.ignored += e.ignored ? e.ignored.count : 0;
      a.retryable += e.retryable ? e.retryable.count : 0;
      a.critical += e.critical ? e.critical.count : 0;
      return a;
    }, { ok:0, ignored:0, retryable:0, critical:0 });

    const sessionTd = document.getElementById(`session-${id}`);
    sessionTd && (sessionTd.innerHTML = `
      <div class="counters">
        ${badge(a.ok, "ok")}
        ${badge(a.ignored, "ignored")}
        ${badge(a.retryable, "retryable")}
        ${badge(a.critical, "critical")}
      </div>`
    );
  };

  const connect = () => {
    const es = new EventSource("/_monitor-all");
    es.addEventListener("state", ({ data }) => {
        const state = JSON.parse(data);
        refresh(state);
    });
    es.onerror = (error) => {
      console.error("sse error... retrying...");
    };
  }

  const { rows } = {{{json this}}};
  rows.map(row => refresh(row));
  connect();
</script>
<script src="/_public/sort-table.js"></script>
